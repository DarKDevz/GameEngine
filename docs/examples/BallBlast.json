{"0":[[0,-1000,100,5000,50],[0,-912,-400,87,500],[0,1208,-400,93,500]],"version":1.2,"file":[{"jsfile":{"data":"this.init = function () {Bullet.prototype.getSpeed = function () {return 10;};player.shootingDelay = 50;this.timer = 303;};this.overrideLateUpdate = function () {let managerObject = this;class OverriddenEnemy extends Enemy {earlyUpdate() {if (this.collision(player)) {player.playerDeath();removeObject(this);} else if (this.collision(managerObject)) {this.moveTo = -random(3, 4.5);}}display() {}lateUpdate() {if (!this.moveTo) {this.dir = -500;this.moveTo = -random(3, 4.5);}textSize(16);let speed = 0.025;let playerPos = player.pos;let targetX = playerPos.x;let targetY = playerPos.y + this.dir;this.x = lerp(this.x, targetX, speed / 3);this.y = targetY;if (this.health <= 0) {removeObject(this);managerObject.timer -= 1;}fill(...this.color);circle(this.x + this.howBig / 2, this.y + this.howBig / 2, this.howBig);fill(125);text(this.health, this.x + this.howBig / 2, this.y + this.howBig / 2);this.dir += this.moveTo;if (targetY < -500) {this.moveTo = random(3, 4.5);}super.lateUpdate();}}let howBig = round(random(10, 140));let enemy = new OverriddenEnemy(player.pos.x,2000 + howBig * 2,howBig,howBig);enemy.typeId = undefined;enemy.isShootable = true;enemy.health = round(random(10, 50) + howBig / 5);enemy.howBig = howBig;enemy.color = [random(0, 255), random(0, 255), random(0, 255)];engine.activeScene.addObj(enemy);};this.update = function () {player.shootTowards(width / 2, height / 2 - 50);player.pos.y = 50;player.size.y = 50;if ((frameCount % this.timer !== 0 && player.pos) ||this.lastFrame === frameCount)return;this.lastFrame = frameCount;this.overrideLateUpdate();};","type":".js","references":{"name":"Enemy"}}}],"0l":[0,196,-10,500],"0c":[{"0":[{"name":"gameScript","params":{"fileUUID":"jsfile","vals":{}}}]}]}
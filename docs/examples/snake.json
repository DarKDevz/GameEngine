{"version":1.3,"file":[{"jsfile":{"data":"let scl = 64;this.x = 0;this.y = 0;this.xspeed = 1;this.yspeed = 0;this.total = 0;this.tail = [];this.testPosx = this.x;this.testPosy = this.y;this.oldPosx = this.x;this.oldPosy = this.y;this.keyPressed = function () {if (keyCode === UP_ARROW) {this.dir(0, -1);} else if (keyCode === DOWN_ARROW) {this.dir(0, 1);} else if (keyCode === RIGHT_ARROW) {this.dir(1, 0);} else if (keyCode === LEFT_ARROW) {this.dir(-1, 0);}};this.eat = function (pos) {this.total++;};this.dir = function (x, y) {this.xspeed = x;this.yspeed = y;};this.death = function () {for (var i = 0; i < this.tail.length; i++) {var pos = this.tail[i];var d = dist(this.x, this.y, pos.x, pos.y);if (d < 1) {console.log('starting over');this.total = 0;this.tail = [];}}};this.earlyUpdate = function () {this.testPosx = this.testPosx + this.xspeed * 3;this.testPosy = this.testPosy + this.yspeed * 3;this.x = Math.floor(this.testPosx / scl) * scl;this.y = Math.floor(this.testPosy / scl) * scl;this.x = constrain(this.x, 0, scl * 10);this.y = constrain(this.y, 0, scl * 10);if (this.x !== this.oldPosx || this.y !== this.oldPosy) {for (var i = 0; i < this.tail.length - 1; i++) {this.tail[i] = this.tail[i + 1];}if (this.total >= 1) {this.tail[this.total - 1] = createVector(this.oldPosx, this.oldPosy);}this.oldPosx = this.x;this.oldPosy = this.y;}this.death();};this.display = function () {fill(0);for (var i = 0; i < this.tail.length; i++) {rect(this.tail[i].x, this.tail[i].y, 64, 64);}rect(this.x, this.y, 64, 64);};this.init = function () {player = {head: this,update: () => {},lateUpdate: () => {},camera: () => {},checkCollisions: () => {},display: () => {},};engine.cameraPos = {x: 64 * 5.5,y: 64 * 5.5,};frameRate(60);};","type":".js","references":{"name":"Snake"}}},{"jsfile0":{"data":"this.init = function () {};this.drawBox = function (x, y) {noFill();stroke(1);rect(x, y, 64, 64);};this.display = function () {for (let i = 0; i < 11; i++) {for (let z = 0; z < 11; z++) {this.drawBox(i * 64, z * 64);}}return 1;};","type":".js","references":{"name":"Grid"}}},{"jsfile2":{"data":"this.init = function () {if (this?.width && this?.height) {/*Avoid making double physics body if initializing twice*/if (!this.body) {let bodyDef = new b2BodyDef();var fixDef = new b2FixtureDef();fixDef.density = 1.0;fixDef.friction = 0.5;fixDef.restitution = 0;bodyDef.type = b2Body.b2_staticBody;fixDef.shape = new b2CircleShape();let hw = this.width / 2;let hh = this.height / 2;fixDef.shape.SetRadius(hh - 1);bodyDef.position.x = this.x + hw;bodyDef.position.y = this.y + hh;this.body = engine.world.CreateBody(bodyDef);this.body.SetUserData(this);this.fixture = this.body.CreateFixture(fixDef);}}return 1;};this.draw = function () {fill(255, 0, 0);circle(this?.body?.m_xf?.position.x,this?.body?.m_xf.position.y,this?.fixture?.GetShape()?.m_radius * 2);return 1;};this.update = function () {if (HandleCollision(player.head, this)) {this.x = random(0, 640);this.x = Math.floor(this.x / 64) * 64;this.y = random(0, 640);this.y = Math.floor(this.y / 64) * 64;player.head.eat();}};","type":".js","references":{"name":"Apple"}}}],"scenes":{"0":{"Data":[[0,0,0,64,64],[0,286,218,82,150],[0,0,0,64,64]],"sceneData":[0,400,-10,500],"componentData":[{"0":[{"name":"gameScript","params":{"fileUUID":"jsfile","vals":{}}}],"1":[{"name":"gameScript","params":{"fileUUID":"jsfile0","vals":{}}}],"2":[{"name":"gameScript","params":{"fileUUID":"jsfile2","vals":{}}}]}]}},"GUI":{"default":true}}